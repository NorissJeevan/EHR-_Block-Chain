modules = ["python-3.11", "nodejs-20", "web"]

[nix]
channel = "stable-25_05"
packages = ["cairo", "ffmpeg-full", "freetype", "ghostscript", "glibcLocales", "gobject-introspection", "gtk3", "libxcrypt", "openssl", "pkg-config", "postgresql", "qhull", "tcl", "tk", "xsimd"]

[agent]
expertMode = true

[workflows]
runButton = "Project"

[[workflows.workflow]]
name = "Project"
mode = "parallel"
author = "agent"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Frontend"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Backend Blockchain"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Ganache Blockchain"

[[workflows.workflow]]
name = "Frontend"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd safe && npm start"
waitForPort = 5000

[workflows.workflow.metadata]
outputType = "webview"

[[workflows.workflow]]
name = "Backend Blockchain"
author = "agent"

[workflows.workflow.metadata]
outputType = "console"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && npm start"
waitForPort = 8000

[[workflows.workflow]]
name = "Ganache Blockchain"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && npx ganache --host 127.0.0.1 --port 8000 --gasLimit 6721975 --gasPrice 20000000000"
waitForPort = 8000

[workflows.workflow.metadata]
outputType = "console"

[[ports]]
localPort = 5000
externalPort = 80

[[ports]]
localPort = 8000
externalPort = 8000
exposeLocalhost = true

[deployment]
deploymentTarget = "autoscale"
run = ["bash", "-c", "cd safe && npx serve -s build -l 5000"]
build = ["cd safe && npm run build"]
